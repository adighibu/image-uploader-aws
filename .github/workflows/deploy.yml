name: Deploy Image Uploader

on:
  push:
    branches:
      - main
  workflow_dispatch:   # üëâ rulezi »ôi manual din Actions

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout cod
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ ConfigureazƒÉ AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      # 3Ô∏è‚É£ InstaleazƒÉ SAM CLI
      - name: Install SAM CLI
        run: |
          pip install --upgrade aws-sam-cli

      # 4Ô∏è‚É£ Build SAM
      - name: SAM Build
        run: sam build

      # 5Ô∏è‚É£ Deploy SAM folosind bucket-ul tƒÉu dedicat
      - name: SAM Deploy
        run: |
          sam deploy \
            --stack-name image-uploader \
            --capabilities CAPABILITY_IAM \
            --s3-bucket image-uploader-artifacts-adi-2025 \
            --no-confirm-changeset

      # 6Ô∏è‚É£ Ob»õine URL-ul real al API Gateway »ôi actualizeazƒÉ config.json
      - name: Update config.json
        run: |
          mkdir -p frontend
          API_URL=$(aws cloudformation describe-stacks \
            --stack-name image-uploader \
            --query "Stacks[0].Outputs[?OutputKey=='UploadAPIEndpoint'].OutputValue" \
            --output text)
          echo "{\"API_BASE_URL\": \"$API_URL\"}" > frontend/config.json

      # 7Ô∏è‚É£ Upload frontend (index.html + config.json) √Æn S3-ul pentru site
      - name: Upload frontend to S3
        run: |
          aws s3 sync image-uploader/frontend/ s3://img-upload-v1-adi-2025-12345/
